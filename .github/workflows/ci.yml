name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --timeout 120 -e .[dev]
    
    - name: Run linting
      run: |
        black --check src tests
        isort --check-only src tests
        flake8 src tests
    
    - name: Run type checking
      run: mypy src
    
    - name: Run tests
      run: |
        pytest --cov=kong_mcp_server --cov-report=xml --cov-report=term-missing
        # Generate text coverage report for display and Codecov upload
        coverage report > coverage.txt
    
    - name: Print coverage summary
      if: matrix.python-version == '3.11'
      run: |
        echo "=== Coverage Summary ==="
        if [ -f coverage.txt ]; then
          # Extract overall coverage percentage
          COVERAGE=$(grep -E "TOTAL.*[0-9]+%" coverage.txt | awk '{print $NF}')
          echo "Overall Coverage: $COVERAGE"
          echo ""
          echo "=== Full Coverage Report ==="
          cat coverage.txt
        else
          echo "Coverage file not found"
        fi
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        slug: shibbirmcc/kong-ratelimiter-mcp-server
        override_branch: ${{ github.head_ref || github.ref_name }}
        override_commit: ${{ github.sha }}
        override_pr: ${{ github.event.number }}

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    env:
      DOCKER_USERNAME: shibbirmcc
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Get version
      id: version
      run: echo "VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_OUTPUT
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_USERNAME }}/kong-ratelimiter-mcp-server:latest
          ${{ env.DOCKER_USERNAME }}/kong-ratelimiter-mcp-server:${{ steps.version.outputs.VERSION }}